package main.CapaPresentacio.Vista;

import main.CapaPresentacio.Controllers.CtrlPresentacion;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * It represents the New Game view in the UI.
 * It allows the user to start a new game either with current settings or create new settings.
 */
public class vistaNewGame extends JFrame implements ActionListener {

    private  CtrlPresentacion ctrl;

    private MainWindow mainWindow;
    private JButton currentSettingsButton = new JButton("Play with current settings");
    private JButton newSettingsButton = new JButton("Create new settings");

    private GridBagConstraints c = new GridBagConstraints();
    private final JPanel panelButtons = new JPanel();

    /**
     * Constructor for the New Game view. Sets the control and main window.
     * @param ctrl - the controller object for the view to interact with.
     * @param mainWindow - the main window of the application.
     */
    public vistaNewGame(CtrlPresentacion ctrl, MainWindow mainWindow){
        super("New Game");
        this.ctrl=ctrl;
        this.mainWindow = mainWindow;
        initializeComponents();
    }

    /**
     * Name of the table of Settings in the mainWindow
     */

    private void initializeWindow(){
        this.setLayout(new GridBagLayout());
        Dimension res = ctrl.getCurrentResolution();
        this.setSize(res.width*24/100, res.height*27/100);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }

    private void initializeButtons(){
        panelButtons.setLayout(new GridBagLayout());
        c.insets = new Insets(10, 0, 10, 0);
        c.gridx = 0;
        c.gridy = 0;
        c.weighty = 0.5;
        c.fill = GridBagConstraints.HORIZONTAL;
        c.anchor = GridBagConstraints.CENTER;

        addButtonWithListener(newSettingsButton, "new");
        panelButtons.add(newSettingsButton, c);

        c.gridy = 1;
        addButtonWithListener(currentSettingsButton, "current");
        panelButtons.add(currentSettingsButton, c);

        c.gridy = 0;
        c.weighty = 1.0;
        c.anchor = GridBagConstraints.NORTH;
        this.add(panelButtons, c);
    }


    private void gameInfo(){
        JLabel labelParameters = new JLabel("Current game parameters", SwingConstants.CENTER);
        c.gridy = 3;
        c.weighty = 0.1;
        c.fill = GridBagConstraints.HORIZONTAL;
        c.anchor = GridBagConstraints.SOUTH;
        this.add(labelParameters, c);
    }

    /**
     * The table where we update the settings info.
     */
    private void table(){
        JScrollPane tableScroll = new JScrollPane(mainWindow.getSettingsTable());
        tableScroll.setBorder(new EmptyBorder(10, 10, 10, 10));
        c.gridy = 4;
        c.weighty = 0.8;
        c.weightx = 0.8;
        c.fill = GridBagConstraints.BOTH;
        this.add(tableScroll, c);
    }

    private void initializeCurrentSettings(){
        gameInfo();
        table();
    }
    /**
     * Initializes all the components for the New Game view.
     */
    private void initializeComponents() {
        initializeWindow();
        initializeButtons();
        initializeCurrentSettings();
    }

    private void addButtonWithListener(JButton button, String command) {
        button.addActionListener(this);
        button.setActionCommand(command);
    }


    /**
     * Handles the action events generated by the buttons.
     * @param e - the action event that has occurred.
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        System.out.println("Button clicked");
        String command = e.getActionCommand();
        if ("current".equals(command)) {
            if (!ctrl.isSettingsValid()) {
                JOptionPane.showMessageDialog(null, "No settings have been set yet. Please set them before starting the game.");
                return;
            }
            this.dispose();
            ctrl.startNewGame();
            new vistaGame(ctrl,mainWindow).setVisible(true);  // Open the game view with current settings
        } else if ("new".equals(command)) {
            this.dispose();
            ctrl.startNewGame();
            new vistaSettings(ctrl, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    ((JFrame)e.getSource()).dispose();
                    new vistaGame(ctrl,mainWindow).setVisible(true);
                }
            }).setVisible(true);
        }
    }
}

